name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      VERSION_REF: ${{ github.ref_name }}
      INPUT_TAG: ${{ inputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Compute version
        id: ver
        run: |
          VERSION=${VERSION_REF}
          if [ -z "$VERSION" ] && [ -n "$INPUT_TAG" ]; then VERSION="$INPUT_TAG"; fi
          if [ -z "$VERSION" ]; then echo "::error::No tag provided (use push tag or workflow input)"; exit 1; fi
          echo "version_tag=$VERSION" >> $GITHUB_OUTPUT
          VERSION_NO_V=${VERSION#v}
          echo "version_no_v=$VERSION_NO_V" >> $GITHUB_OUTPUT
      - name: Build
        run: |
          mkdir -p dist
          VERSION=${GITHUB_REF_NAME}
          VERSION=${VERSION#v}
          GOOS=darwin GOARCH=arm64 go build -ldflags "-s -w" -o dist/scribe_${VERSION}_darwin_arm64 ./cmd/scribe
          GOOS=darwin GOARCH=amd64 go build -ldflags "-s -w" -o dist/scribe_${VERSION}_darwin_amd64 ./cmd/scribe
          GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o dist/scribe_${VERSION}_linux_amd64 ./cmd/scribe
          GOOS=linux GOARCH=arm64 go build -ldflags "-s -w" -o dist/scribe_${VERSION}_linux_arm64 ./cmd/scribe
          GOOS=windows GOARCH=amd64 go build -ldflags "-s -w" -o dist/scribe_${VERSION}_windows_amd64.exe ./cmd/scribe
      - name: Checksums
        run: |
          cd dist
          sha256sum * > checksums.txt
      - name: Cosign sign (optional)
        if: env.COSIGN_KEY != ''
        env:
          COSIGN_EXPERIMENTAL: "1"
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
        run: |
          for f in dist/*; do
            cosign sign-blob --yes --key "$COSIGN_KEY" "$f" > "$f.sig"
          done
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.version_tag }}
          files: dist/*
          generate_release_notes: true
          fail_on_unmatched_files: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


